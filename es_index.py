#Standalone Script
from pathlib import Path
import ujson
from elasticsearch import Elasticsearch
#Reading into a list of dicts


def read_jsonl(file_path):
    with Path(file_path).open('r', encoding='utf8') as f:
        for line in f:
            try:  # hack to handle broken jsonl
                yield ujson.loads(line.strip())
            except ValueError:
                continue

#path = "/Users/balazs/Desktop/args-me-1.0-cleaned.json"

path = "/Users/balazs/Desktop/debateorg.json"
print ("Reading from {}".format(path))
d = read_jsonl(path)

lines = []
i = 0
while True:
    try:
        lines.append(next(d))
        i=i+1
        if i%1001 == 0:
            print("Lines Read: ", i)
            break
    except Exception as e:
        print(e)
        break
print ("data loaded")

#Elasticsearch
print ("Connecting to elastic search")
# Password for the 'elastic' user generated by Elasticsearch
ELASTIC_PASSWORD = "DX6i+8n=85jVn9jVL0Ze"

# Create the client instance
es = Elasticsearch(
    "https://localhost:9200",
    ca_certs="/Users/balazs/elasticsearch-8.6.2/config/certs/http_ca.crt",
    basic_auth=("elastic", ELASTIC_PASSWORD)
)
print ("done")

# Successful response!
es.info()
# {'name': 'instance-0000000000', 'cluster_name': ...}

index_name = "debateorg-preprocessed"
es.indices.create(index=index_name, ignore=[400]) 

print ("start indexing")
for i,row in enumerate(lines):
    if not i%10:
        print("Lines Indexed: ", i)
    response = es.index(
        index = index_name,
        id = row['id'],
        body = {"text" : row["text"]
               })
            
#Test
s = "should schools have open campus?"
res = es.search(index = index_name, body={"query": {"match": {"text": s} } }, size = 25)['hits']['hits']

print("Elasticsearch test results: ", res)